{"version":3,"sources":["app/models/Show.tsx","app/header/HeaderLink/HeaderLink.tsx","app/header/Header.tsx","app/home/Home.tsx","app/shows/ShowCollection/ShowCard/ShowCard.tsx","actions/index.tsx","firebase.js","app/shows/ShowCollection/Show/Show.tsx","app/shows/ShowCollection/ShowCollection.tsx","app/LoaderBar/LoaderBar.tsx","app/shows/Shows.tsx","app/friends/FriendsList/FriendCard/Avatar/Avatar.tsx","app/friends/FriendsList/FriendCard/FriendCard.tsx","app/friends/FriendsList/FriendsList.tsx","app/friends/Friends.tsx","app/library/Library.tsx","app/profile/Profile.tsx","app/signin/SignIn.tsx","app/search/Search.tsx","app/App.tsx","reportWebVitals.ts","reducers/login.tsx","reducers/user.tsx","reducers/root.tsx","index.tsx"],"names":["GENRE","Weekday","HeaderLink","children","path","className","to","Header","userId","useSelector","state","user","_id","isLoggedIn","src","alt","Home","useState","email","setEmail","style","backgroundImage","htmlFor","type","id","onChange","e","target","value","placeholder","genres","ShowCard","showInfo","showSetter","showIdSetter","image","onClick","effect","original","save_user_data","payload","add_show_to_favorites","showId","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","findOrAddUser","password","a","usersRef","collection","userQuery","query","where","getDocs","querySnapshot","userRef","empty","addDoc","docs","userDoc","ref","getDoc","userDocSnap","data","signUserIn","addShowToFavorites","doc","updateDoc","favorites","arrayUnion","getShowsLikes","showRef","showSnap","exists","likeQuantity","likeNumber","setDoc","appendShowLikeQuantity","increment","setUserInfo","userInfo","age","username","getPotentialFriends","usernameOrEmail","potentialFriendsQuery1","trim","potentialFriendsQuery2","querySnapshot1","querySnapshot2","result1","map","result2","result","concat","addFriend","friendEmail","userSnap","friends","merge","friendQuery","friendRef","deleteFriend","userEmail","arrayRemove","getUsersFriends","friendsDetails","friendsList","i","length","slice","friendData","push","friendDoc","getUserShows","Show","show","usersFavoriteShows","dispatch","useDispatch","isUsersFavorite","setIsUsersFavorite","showLikeQuantity","setShowLikeQuantity","showIsInPersonalLibary","useParams","alert","useEffect","showLikeNumber","some","name","parse","summary","handleLike","reduce","acc","genre","ShowCollection","showCollection","title","displayedShows","setDisplayedShows","selectedShowId","setSelectedShowId","selectedShow","setSelectedShow","lastShowIndex","setLastShowIndex","pageNum","setPageNum","newLastShowIndex","fetch","then","response","json","shows","resultingShows","forEach","includes","sortShows","filter","j","catch","LoaderBar","Shows","initialShows","natureShows","setNatureShows","familyShows","setFamilyShows","childrenShows","setChildrenShows","foodShows","setFoodShows","sportsShows","setSportsShows","travelShows","setTravelShows","historyShows","setHistoryShows","legalShows","setLegalShows","medicalShows","setMedicalShows","warShows","setWarShows","actionShows","setActionShows","comedyShows","setComedyShows","crimeShows","setCrimeShows","dramaShows","setDramaShows","espionageShows","setEspionageShows","musicShows","setMusicShows","romanceShows","setRomanceShows","allShows","genreName","DRAMA","NATURE","FAMILY","CHILDREN","FOOD","SPORTS","HISTORY","TRAVEL","LEGAL","MEDICAL","WAR","ACTION","COMEDY","CRIME","ESPIONAGE","MUSIC","ROMANCE","localShows","localNatureShows","localFamilyShows","localChildrenShows","localFoodShows","localSportsShows","localTravelShows","localHistoryShows","localLegalShows","localMedicalShows","localWarShows","localActionShows","localComedyShows","localCrimeShows","localDramaShows","localEspionageShows","localMusicShows","localRomanceShows","index","Avatar","matrix","setIndeces","squareColor","setColor","squareNumber","squareIndeces","Array","Math","round","random","generateAvatarSquareSequence","floor","toString","row","el","backgroundColor","FriendCard","isFriend","setFriends","mainUserId","mainUserEmail","history","useHistory","newFriend","window","confirm","deletedFriendIndex","findIndex","friend","handleDeleteFriend","handleAddFriend","FriendsList","users","isFriendsList","Friends","setUsers","setUsernameOrEmail","isInSearch","setIsInSearch","potentialFriends","handleSubmit","preventDefault","findPotentialFriends","userFriends","Library","favoriteShowIds","favoriteShows","setFavoriteShows","Promise","all","url","results","userShows","Profile","initialEmail","initialPassword","initialUsername","initialAge","setPassword","setUsername","setAge","handleNewUserData","set_new_user_data","defaultValue","SignIn","match","params","handleSignOut","handleSignIn","Search","setShows","searchedShowName","setSearchedShowName","handleShowSearch","App","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loginReducer","action","initialState","userReducer","newState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de215360.chunk.js","sourcesContent":["export const genres = [\n    'Nature',\n    'Family',\n    'Children',\n    'Food',\n    'Sports',\n    'Travel',\n    'History',\n    'Legal',\n    'Medical',\n    'War',\n    'Action',\n    'Comedy',\n    'Crime',\n    'Drama',\n    'Espionage',\n    'Music',\n    'Romance'\n];\n\nexport enum GENRE {\n    NATURE = 'Nature',\n    FAMILY = 'Family',\n    CHILDREN = 'Children',\n    FOOD = 'Food',\n    SPORTS = 'Sports',\n    TRAVEL = 'Travel',\n    HISTORY = 'History',\n    LEGAL = 'Legal',\n    MEDICAL = 'Medical',\n    WAR = 'War',\n    ACTION = 'Action',\n    COMEDY = 'Comedy',\n    CRIME = 'Crime',\n    DRAMA = 'Drama',\n    ESPIONAGE = 'Espionage',\n    MUSIC = 'Music',\n    ROMANCE = 'Romance'\n}\n\nenum Weekday {\n    MONDAY = \"Monday\",\n    TUESDAY = \"Tuesday\",\n    WEDNESDAY = \"Wednesday\",\n    THURSDAY = \"Thursday\",\n    FRIDAY = \"Friday\"\n}\n\ntype Genre = `${GENRE}`;\n\ntype WeekdayType = `${Weekday}`;\n\nexport interface ShowModel {\n    averageRuntime: number;\n    dvdCountry?: string | null;\n    ended: string\n    externals: {\n        imdb: string\n        thetvdb: number\n        tvrage: number\n    };\n    genres: Genre[];\n    id: number;\n    image: {\n        medium: string\n        original: string\n    };\n    language: string;\n    name: string;\n    network: {\n        country: {\n            code: string;\n            name: string;\n            timezone: string;\n        };\n        id: number;\n        name: string;\n    };\n    officialSite: string;\n    premiered: string;\n    rating: {\n        average: number | null;\n    };\n    runtime: number;\n    schedule: {\n        days: WeekdayType[]\n    };\n    time: string;\n    status: string;\n    summary: string;\n    type: string;\n    updated: number;\n    url: string;\n    webChannel: {\n        country: {\n            code: string;\n            name: string;\n            timezone: string;\n        };\n        id: number;\n        name: string;\n    };\n    weight: number;\n    _links: {\n        previousepisode: {\n            href: string;\n        };\n        self: {\n            href: string;\n        };\n    };\n}","import {Link} from 'react-router-dom';\n\ntype Props = {\n    children: JSX.Element | string,\n    path: string\n};\n\nexport const HeaderLink = ({children, path}: Props) => {\n    return (\n        <li className=\"navigation__item\">\n            <Link to={path} className=\"navigation__link\">{children}</Link>\n        </li>\n    );\n}","import { Link } from \"react-router-dom\";\n\nimport { RootState } from \"../../reducers/root\";\nimport { useSelector } from \"react-redux\";\n\nimport { HeaderLink } from \"./HeaderLink/HeaderLink\";\n\nimport './Header.scss';\n\nexport const Header = () => {\n    const userId = useSelector((state: RootState) => state.user._id);\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n\n    return (\n        <header className=\"navigation\">\n        <nav className=\"navigation__nav\">\n            <Link to='/' className=\"navigation__logo\">\n                <img src='../assets/logoheader.svg' alt='Notflix logo'/>\n            </Link>\n            <ul className=\"navigation__list\">\n                <HeaderLink path='/'>HOME</HeaderLink>\n                <HeaderLink path='/shows'>SHOWS</HeaderLink>\n                <HeaderLink path='/friends'>FRIENDS</HeaderLink>\n                {isLoggedIn ? <HeaderLink path={`/library/${userId}`}>LIBRARY</HeaderLink> : ''}\n                <HeaderLink path='/profile'>PROFILE</HeaderLink>\n            </ul>\n            <div className=\"navigation__utilities\">\n                <Link to='/search' className='navigation__search'>\n                    <img className=\"navigation__search-icon\" src='../assets/search.svg' alt='Magnifying glass'/>\n                </Link>\n                <Link to='/signin'>\n                    <button className=\"btn btn-primary btn--dark-grey\">Sign In</button>\n                </Link>\n            </div>\n        </nav>\n    </header>\n    );\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.scss';\n\nexport const Home = () => {\n\n    const [email, setEmail] = useState('');\n\n    return (\n        <main className='main'>\n            <section className='home'>\n                <article className='home__cta' style={{backgroundImage: \"url('./assets/bg.jpeg')\"}}>\n                    <h2 className='heading-secondary heading-secondary--light u-margin-bottom-small'>Unlimited movies, TV, shows and more</h2>\n                    <p className='subheading subheading--light u-margin-bottom'>Watch anywhere. Cancel anytime</p>\n                    <form className='home__form'>\n                        <label htmlFor=\"emailInputEl\" className=\"home__label\">Ready to watch? Enter your email:</label>\n                        <span className=\"home__input-group\">\n                            <input type='email' className='home__input' id='emailInputEl' onChange={(e) => setEmail(e.target.value)} placeholder=\"Email Address\"/>\n                            <Link to={`/signin/${email}`}>\n                                <button className='btn btn--form'>Sign Up</button>\n                            </Link>\n                        </span>\n                        <p className='home__sublabel'>Entering your email will create or restart your membership</p>\n                    </form>\n                </article>\n                <img className='home__img' src=\"./assets/notflix.svg\" alt='Girl holding Netflix logo'/>\n            </section>\n        </main>\n    );\n};","import { useEffect, useState } from 'react';\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nimport {ShowModel} from '../../../models/Show';\n\ninterface Props {\n    showInfo: ShowModel;\n    showSetter: React.Dispatch<React.SetStateAction<ShowModel>>;\n    showIdSetter: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const ShowCard = ({showInfo, showSetter, showIdSetter}: Props) => {\n    // const [show, setShow] = useState({} as ShowModel);\n\n    function handleShowCardClick() {\n        showSetter(showInfo);\n        showIdSetter(showInfo.id);\n    }\n\n    // useEffect(() => {\n    //     setShow(showInfo);\n    // }, []);\n\n    return (\n        showInfo.image\n        ?\n        <div className='shows__card' onClick={handleShowCardClick}>\n            <LazyLoadImage\n                effect=\"blur\"\n                className='shows__card-img'\n                src={showInfo.image.original}\n                alt={`${showInfo.id}`} />\n        </div>\n        :\n        <div className='shows__card'>\n            No poster for this show    \n        </div>\n    );\n};","import { UserModel } from \"../app/models/User\";\n\nexport const signin = () => {\n    return {\n        type: 'SING_IN'\n    }\n};\n\nexport const signout = () => {\n    return {\n        type: 'SIGN_OUT'\n    };\n};\n\nexport const save_user_data = (user: UserModel) => {\n    return {\n        type: 'SAVE_USER_DATA',\n        payload: user\n    }\n};\n\nexport const clear_user_data = () => {\n    return {\n        type: 'CLEAR_USER_DATA'\n    }\n};\n\nexport const add_show_to_favorites = (showId: number) => {\n    return {\n        type: 'ADD_SHOW_TO_FAVORITES',\n        payload: {\n            showId\n        },\n    }\n};\n\nexport const set_new_user_data = (user: UserModel) => {\n    return {\n        type: 'SET_NEW_USER_DATA',\n        payload: {\n            ...user\n        }\n    }\n};\n\nexport const set_friends = (users: UserModel[]) => {\n    return {\n        type: 'SET_FRIENDS',\n        payload: [...users]\n    };\n};","import {initializeApp} from 'firebase/app';\nimport {\n  getFirestore,\n  collection,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  addDoc,\n  doc,\n  updateDoc,\n  arrayUnion,\n  arrayRemove,\n  increment\n} from 'firebase/firestore/lite';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}; \n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\n\nexport async function setUser(db, email, password) {\n  const usersRef = collection(db, 'users');\n  const userQuery = query(usersRef, where('email', '==', email), where('password', '==', password));\n  const querySnapshot = await getDocs(userQuery);\n  if (querySnapshot.empty) {\n      await addDoc(usersRef, {\n        email,\n        password\n      });\n  }\n}\n\nasync function findOrAddUser(db, email, password) {\n  const usersRef = collection(db, 'users');\n  const userQuery = query(usersRef, where('email', '==', email), where('password', '==', password));\n  const querySnapshot = await getDocs(userQuery);\n  let userRef = null;\n  if (querySnapshot.empty) {\n      userRef = await addDoc(usersRef, {\n        email,\n        password,\n      });\n  } else {\n    const [userDoc] = querySnapshot.docs;\n    userRef = userDoc.ref;\n  }\n  const userDocSnap = await getDoc(userRef);\n  return {\n    _id: userRef.id,\n    ...userDocSnap.data()\n  };\n}\n\nexport async function signUserIn(db, email, password) {\n  const user = await findOrAddUser(db, email, password);\n  return user;\n}\n\nexport async function addShowToFavorites(db, userId, showId) {\n  const userRef = doc(db, 'users', userId);\n  await updateDoc(userRef, {\n    favorites: arrayUnion(showId)\n  });\n}\n\nexport async function getShowsLikes(db, showId) {\n  const showRef = doc(db, 'shows', `${showId}`);\n  const showSnap = await getDoc(showRef);\n\n  if (showSnap.exists()) {\n    return showSnap.data().likeQuantity;\n  }\n  \n  const likeNumber = 0;\n  await setDoc(showRef, {\n    likeQuantity: likeNumber\n  });\n  return likeNumber;\n}\n\nexport async function appendShowLikeQuantity(db, showId) {\n  const showRef = doc(db, 'shows', `${showId}`);\n  await updateDoc(showRef, {\n    likeQuantity: increment(1)\n  });\n}\n\nexport async function setUserInfo(db, userInfo) {\n  const userRef = doc(db, 'users', `${userInfo._id}`);\n  await updateDoc(userRef, {\n    email: userInfo.email,\n    password: userInfo.password,\n    age: userInfo.age,\n    username: userInfo.username,\n  });\n}\n\nexport async function getPotentialFriends(db, usernameOrEmail) {\n  const usersRef = collection(db, 'users');\n  const potentialFriendsQuery1 = query(usersRef, where('email', '==', usernameOrEmail.trim()));\n  const potentialFriendsQuery2 = query(usersRef, where('username', '==', usernameOrEmail.trim()));\n  const querySnapshot1 = await getDocs(potentialFriendsQuery1);\n  const querySnapshot2 = await getDocs(potentialFriendsQuery2);\n  const result1 = querySnapshot1.docs.map(doc => {return {...doc.data(), _id: doc.id}});\n  const result2 = querySnapshot2.docs.map(doc => {return {...doc.data(), _id: doc.id}});\n  const result = result1.concat(result2);\n  return result;\n}\n\nexport async function addFriend(db, userId, friendEmail) {\n  const userRef = doc(db, 'users', `${userId}`);\n  const userSnap = await getDoc(userRef);\n  if (!userSnap.data().friends) {\n    await setDoc(userRef, {\n      friends: [friendEmail]\n    }, \n    {\n      merge: true\n    });\n    return;\n  }\n  await updateDoc(userRef, {\n    friends: arrayUnion(friendEmail)\n  });\n  // adding user to friend's list of friends\n  const usersRef = collection(db, 'users');\n  const friendQuery = query(usersRef, where('email', '==', friendEmail));\n  const querySnapshot = await getDocs(friendQuery);\n  const friendRef = doc(db, 'users', querySnapshot.docs[0].id);\n  if (querySnapshot.docs[0].data().friends) {\n    await setDoc(friendRef, {\n      friends: [userSnap.data().email]\n    }, \n    {\n      merge: true\n    });\n    return;\n  }\n  await updateDoc(friendRef, {\n    friends: arrayUnion(userSnap.data().email)\n  });\n}\n\nexport async function deleteFriend(db, userId, userEmail, friendEmail) {\n  const usersRef = collection(db, 'users');\n  const friendQuery = query(usersRef, where('email', '==', friendEmail));\n  const querySnapshot = await getDocs(friendQuery);\n  const friendRef = doc(db, 'users', querySnapshot.docs[0].id);\n  const userRef = doc(db, 'users', userId);\n  await updateDoc(userRef, {\n    friends: arrayRemove(friendEmail)\n  });\n  await updateDoc(friendRef, {\n    friends: arrayRemove(userEmail)\n  });\n}\n\nexport async function getUsersFriends(db, userId) {\n  const userRef = doc(db, 'users', `${userId}`);\n  const userSnap = await getDoc(userRef);\n  const usersRef = collection(db, 'users');\n  const friendsDetails = [];\n  const friendsList = userSnap.data().friends;\n  if (!friendsList) {\n    return [];\n  }\n  for (let i = 0; i < friendsList.length; i+=10) {\n    const userQuery = query(usersRef, where('email', 'in', friendsList.slice(i, i+10)));\n    const friendData = await getDocs(userQuery);\n    friendsDetails.push(...friendData.docs);\n  }\n  return friendsDetails.map(friendDoc => {\n    return {...friendDoc.data(), _id: friendDoc.id}\n  });\n}\n\nexport async function getUserShows(db, id) {\n  const userRef = doc(db, 'users', `${id}`);\n  const userSnap = await getDoc(userRef);\n  return userSnap.data().favorites || [];\n}","\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport parse from 'html-react-parser';\n\nimport { ShowModel } from \"../../../models/Show\";\nimport { RootState } from \"../../../../reducers/root\";\nimport { add_show_to_favorites } from \"../../../../actions\";\nimport {db, addShowToFavorites, getShowsLikes, appendShowLikeQuantity} from \"../../../../firebase\";\n\ninterface Props {\n    show: ShowModel;\n    showSetter: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const Show = ({show, showSetter}: Props) => {\n    const usersFavoriteShows = useSelector((state: RootState) => state.user?.favorites) || [];\n    const userId = useSelector((state: RootState) => state.user._id);\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n    const dispatch = useDispatch();\n\n    const [isUsersFavorite, setIsUsersFavorite] = useState(false);\n    const [showLikeQuantity, setShowLikeQuantity] = useState(0);\n\n    const { id } = useParams<{ id: string }>();\n    const showIsInPersonalLibary = id !== '';\n\n    useEffect(() => {\n        let showLikeNumber = 0;\n        (async function () {\n            showLikeNumber = await getShowsLikes(db, show.id);\n            setShowLikeQuantity(showLikeNumber);\n        })();\n        if (usersFavoriteShows.length > 0) {\n            setIsUsersFavorite(\n                usersFavoriteShows.some(showId => showId === show.id)\n            );\n        }\n    }, []);\n\n    function handleCrossClick() {\n        showSetter(0);\n    }\n\n    async function handleLike(e: React.MouseEvent<HTMLImageElement, MouseEvent>) {\n        if (!isLoggedIn) {\n            alert('You have to sign in to leave likes');\n            return;\n        }\n        if (isUsersFavorite) {\n            alert('You have already liked this show');\n            return;\n        }\n        setIsUsersFavorite(true);\n        dispatch(add_show_to_favorites(show.id));\n        await addShowToFavorites(db, userId, show.id);\n        await appendShowLikeQuantity(db, show.id);\n        setShowLikeQuantity(showLikeQuantity + 1);\n    }\n\n    return (\n        <div className='shows__show'>\n            <span className='shows__show-info'>\n                <h3 className='subheading u-margin-bottom-small'>{show.name}</h3>\n                <span className='shows__show-descr'>{parse(show.summary)}</span>\n                <div className='shows__info-group'>\n                    <img className='shows__like-img' src={showIsInPersonalLibary ? `../assets/${isUsersFavorite ? 'Like' : 'NoLike'}.svg` : `./assets/${isUsersFavorite ? 'Like' : 'NoLike'}.svg`} alt='Heart' onClick={(e) => handleLike(e)}/>\n                    <span className='shows__like-quantity'>{showLikeQuantity}</span>\n                    <span className='shows__categories'>\n                        {show.genres\n                            .slice(0, show.genres.length-1)\n                            .reduce((acc, genre) => acc + (genre as string) + ', ', '')} {show.genres[show.genres.length-1]}\n                    </span>\n                </div>\n                <div className='shows__btn-group'>\n                    <button className='btn btn--form u-margin-right-small' onClick={() => alert('Loading WannaCry to your machine')}>Play</button>\n                </div>\n                <img onClick={handleCrossClick} className='shows__show-close' src={showIsInPersonalLibary ? '../assets/cross.svg' : './assets/cross.svg'} alt='Close'/>\n            </span>\n            <img className='shows__show-img' src={show.image.original} alt={show.name}/>\n        </div>\n    );\n};","import { useEffect, useState } from 'react';\nimport { GENRE, genres, ShowModel } from '../../models/Show';\nimport { ShowCard } from './ShowCard/ShowCard';\nimport {Show} from './Show/Show';\n\ninterface Props {\n    showCollection: ShowModel[];\n    title: string;\n}\n\nexport const ShowCollection = ({showCollection, title}: Props) => {\n    const [displayedShows, setDisplayedShows] = useState([] as ShowModel[])\n    const [selectedShowId, setSelectedShowId] = useState(0);\n    const [selectedShow, setSelectedShow] = useState({} as ShowModel);\n    const offset = 10;\n    const [lastShowIndex, setLastShowIndex] = useState(offset);\n    const [pageNum, setPageNum] = useState(2);\n    let firstShowIndex = 0;\n\n    // useEffect(() => {\n    //     setDisplayedShows(showCollection.slice(firstShowIndex, lastShowIndex));\n    // }, [showCollection]);\n\n    useEffect(() => {\n        setDisplayedShows(showCollection.slice(firstShowIndex, lastShowIndex));\n    }, []);\n\n    function handleLoadMoreClick() {\n        const newLastShowIndex = lastShowIndex + offset;\n        setLastShowIndex(newLastShowIndex);\n        if (lastShowIndex >= showCollection.length) {\n            fetchMoreShows();\n        } else {\n            setDisplayedShows(showCollection.slice(firstShowIndex, newLastShowIndex));\n        }\n    }\n\n    function fetchMoreShows() {\n\n        fetch(`https://api.tvmaze.com/shows?page=${pageNum}`)\n        .then(response => response.json())\n        .then(shows => {\n            const filteredShows = shows.filter((show: ShowModel) => {\n                for (let j = 0; j < show.genres.length; j++) {\n                    if (genres.includes(show.genres[j])) {\n                        return show;\n                    }\n                }\n            });\n            const resultingShows = sortShows(filteredShows);\n            setDisplayedShows([...displayedShows, ...resultingShows]);\n        })\n        .catch(() => {\n            alert('No more shows in this category!');\n        });\n        setPageNum(pageNum + 1);\n    }\n\n    function sortShows(shows: ShowModel[]): ShowModel[] {\n        const resultingShows: ShowModel[] = [];\n        shows.forEach((show: ShowModel) => {\n            if (show.genres.includes(title as GENRE)) {\n                resultingShows.push(show);\n            }\n        })\n        return resultingShows;\n    }    \n\n    return (\n        <section className='shows__collection'>\n            <h3 className='shows__category'>{title}</h3>\n            <div className='shows__cards-and-info-cont'>\n                <div className='shows__show-cards'>\n                    {\n                        displayedShows.length > 0\n                        ?\n                        displayedShows.map((show) => {\n                            return <ShowCard key={show.id} showInfo={show} showSetter={setSelectedShow} showIdSetter={setSelectedShowId}/>\n                        })\n                        :\n                        'No shows available'\n                    }\n                </div>\n                {\n                    selectedShow && selectedShowId !== 0\n                    ?\n                    <Show show={selectedShow} showSetter={setSelectedShowId}/>\n                    :\n                    ''\n                }\n                {\n                    selectedShowId === 0 && displayedShows.length > 0\n                    ?\n                    <button className='btn btn--form u-margin-right-small u-margin-top-small' onClick={handleLoadMoreClick}>Load more</button>\n                    :\n                    ''\n                }\n            </div>\n        </section>\n    );\n};","import './LoaderBar.scss';\n\nexport const LoaderBar = () => {\n    return (\n        <div className=\"lds-ripple\"><div></div><div></div></div>\n    );\n};","import { useState, useEffect } from 'react';\n\nimport { ShowCollection } from './ShowCollection/ShowCollection';\n\nimport './Shows.scss';\n\nimport {ShowModel, GENRE, genres} from '../models/Show';\nimport { LoaderBar } from '../LoaderBar/LoaderBar';\n\nexport const Shows = () => {\n    const initialShows: ShowModel[] = [];\n\n    const [natureShows, setNatureShows] = useState(initialShows);\n    const [familyShows, setFamilyShows] = useState(initialShows);\n    const [childrenShows, setChildrenShows] = useState(initialShows);\n    const [foodShows, setFoodShows] = useState(initialShows);\n    const [sportsShows, setSportsShows] = useState(initialShows);\n    const [travelShows, setTravelShows] = useState(initialShows);\n    const [historyShows, setHistoryShows] = useState(initialShows);\n    const [legalShows, setLegalShows] = useState(initialShows);\n    const [medicalShows, setMedicalShows] = useState(initialShows);\n    const [warShows, setWarShows] = useState(initialShows);\n    const [actionShows, setActionShows] = useState(initialShows);\n    const [comedyShows, setComedyShows] = useState(initialShows);\n    const [crimeShows, setCrimeShows] = useState(initialShows);\n    const [dramaShows, setDramaShows] = useState(initialShows);\n    const [espionageShows, setEspionageShows] = useState(initialShows);\n    const [musicShows, setMusicShows] = useState(initialShows);\n    const [romanceShows, setRomanceShows] = useState(initialShows);\n\n    const allShows = [\n        {shows: dramaShows, genreName: GENRE.DRAMA}, \n        {shows: natureShows, genreName: GENRE.NATURE}, \n        {shows: familyShows, genreName: GENRE.FAMILY}, \n        {shows: childrenShows, genreName: GENRE.CHILDREN}, \n        {shows: foodShows, genreName: GENRE.FOOD}, \n        {shows: sportsShows, genreName: GENRE.SPORTS}, \n        {shows: historyShows, genreName: GENRE.HISTORY}, \n        {shows: travelShows, genreName: GENRE.TRAVEL}, \n        {shows: legalShows, genreName: GENRE.LEGAL}, \n        {shows: medicalShows, genreName: GENRE.MEDICAL}, \n        {shows: warShows, genreName: GENRE.WAR}, \n        {shows: actionShows, genreName: GENRE.ACTION}, \n        {shows: comedyShows, genreName: GENRE.COMEDY}, \n        {shows: crimeShows, genreName: GENRE.CRIME}, \n        {shows: espionageShows, genreName: GENRE.ESPIONAGE}, \n        {shows: musicShows, genreName: GENRE.MUSIC}, \n        {shows: romanceShows, genreName: GENRE.ROMANCE}\n    ];\n\n    function sortShows(shows: ShowModel[]) {\n        const localShows = {\n            localNatureShows: [] as ShowModel[],\n            localFamilyShows: [] as ShowModel[],\n            localChildrenShows: [] as ShowModel[],\n            localFoodShows: [] as ShowModel[],\n            localSportsShows: [] as ShowModel[],\n            localTravelShows: [] as ShowModel[],\n            localHistoryShows: [] as ShowModel[],\n            localLegalShows: [] as ShowModel[],\n            localMedicalShows: [] as ShowModel[],\n            localWarShows: [] as ShowModel[],\n            localActionShows: [] as ShowModel[],\n            localComedyShows: [] as ShowModel[],\n            localCrimeShows: [] as ShowModel[],\n            localDramaShows: [] as ShowModel[],\n            localEspionageShows: [] as ShowModel[],\n            localMusicShows: [] as ShowModel[],\n            localRomanceShows: [] as ShowModel[],\n        }\n\n        shows.forEach(show => {\n           for (let genre of show.genres) {\n            if(genre === GENRE.NATURE){\n                localShows.localNatureShows.push(show);\n            }\n            else if(genre === GENRE.FAMILY){\n                localShows.localFamilyShows.push(show);\n            }\n            else if(genre === GENRE.CHILDREN){\n                localShows.localChildrenShows.push(show);\n            }\n            else if(genre === GENRE.FOOD){\n                localShows.localFoodShows.push(show);\n            }\n            else if(genre === GENRE.SPORTS){\n                localShows.localSportsShows.push(show);\n            }\n            else if(genre === GENRE.TRAVEL){\n                localShows.localTravelShows.push(show);\n            }\n            else if(genre === GENRE.HISTORY){\n                localShows.localHistoryShows.push(show);\n            }\n            else if(genre === GENRE.LEGAL){\n                localShows.localLegalShows.push(show);\n            }\n            else if(genre === GENRE.MEDICAL){\n                localShows.localMedicalShows.push(show);\n            }\n            else if(genre === GENRE.WAR){\n                localShows.localWarShows.push(show);\n            }\n            else if(genre === GENRE.ACTION){\n                localShows.localActionShows.push(show);\n            }\n            else if(genre === GENRE.COMEDY){\n                localShows.localComedyShows.push(show);\n            }\n            else if(genre === GENRE.CRIME){\n                localShows.localCrimeShows.push(show);\n            }\n            else if(genre === GENRE.DRAMA){\n                localShows.localDramaShows.push(show);\n            }\n            else if(genre === GENRE.ESPIONAGE){\n                localShows.localEspionageShows.push(show);\n            }\n            else if(genre === GENRE.MUSIC){\n                localShows.localMusicShows.push(show);\n            }\n            else if(genre === GENRE.ROMANCE){\n                localShows.localRomanceShows.push(show);\n            }\n           }\n        });\n        \n        setNatureShows(localShows.localNatureShows);\n        setFamilyShows(localShows.localFamilyShows);\n        setChildrenShows(localShows.localChildrenShows);\n        setFoodShows(localShows.localFoodShows);\n        setSportsShows(localShows.localSportsShows);\n        setTravelShows(localShows.localTravelShows);\n        setHistoryShows(localShows.localHistoryShows);\n        setLegalShows(localShows.localLegalShows);\n        setMedicalShows(localShows.localMedicalShows);\n        setWarShows(localShows.localWarShows);\n        setActionShows(localShows.localActionShows);\n        setComedyShows(localShows.localComedyShows);\n        setCrimeShows(localShows.localCrimeShows);\n        setDramaShows(localShows.localDramaShows);\n        setEspionageShows(localShows.localEspionageShows);\n        setMusicShows(localShows.localMusicShows);\n        setRomanceShows(localShows.localRomanceShows);\n    }\n\n    useEffect(() => {\n        fetch(`https://api.tvmaze.com/shows?page=${1}`)\n        .then(response => response.json())\n        .then(shows => {\n            const filteredShows = shows.filter((show: ShowModel) => {\n                for (let j = 0; j < show.genres.length; j++) {\n                    if (genres.includes(show.genres[j])) {\n                        return show;\n                    }\n                }\n            });\n            sortShows(filteredShows);\n        });\n    }, []);\n    \n    return (\n        <main className=\"shows\">\n            <div className='shows__hero' style={{backgroundImage: \"url('./assets/bg.jpeg')\"}}>&nbsp;</div>\n            <article className='shows__collections'>\n                {\n                allShows.length !== 0\n                ?\n                allShows.map((showCollection, index) => {\n                    return showCollection.shows.length !== 0 ? <ShowCollection key={index} title={showCollection.genreName} showCollection={showCollection.shows}/> : ''\n                })\n                :\n                <LoaderBar/>\n                }\n            </article>\n        </main>\n    );\n};","import { useEffect, useState } from \"react\";\n\nexport const Avatar = () => {\n    const [matrix, setIndeces] = useState([] as number[][]);\n    const [squareColor, setColor] = useState('');\n\n    useEffect(() => {\n        setIndeces(generateAvatarSquareSequence());\n        setColor(generateRandomColor());\n    }, [])\n\n    function generateAvatarSquareSequence(): number[][] {\n        const squareNumber = 8;\n        const squareIndeces: number[][] = new Array<number[]>(squareNumber);\n        for (let i = 0; i < squareNumber; i++) {\n            squareIndeces[i] = new Array<number>(squareNumber);\n        }\n        for (let i = 0; i < squareNumber; i++) {\n            for (let j = 0; j < squareNumber/2; j++) {\n                const value = Math.round(Math.random());\n                squareIndeces[i][j] = value;\n                squareIndeces[i][squareNumber - j - 1] = value;\n            }\n        }\n        return squareIndeces;\n    }\n\n    function generateRandomColor(): string {\n        return '#'+Math.floor(Math.random()*16777215).toString(16);\n    }\n\n    return (\n        <div className='friends__avatar'>\n            {matrix.map((row, i) => {\n                return <span key={i} className='friends__avatar-row'>\n                    {row.map((el, j) => {\n                        return <span className='friends__avatar-square' key = {j} style={{ backgroundColor: el === 1 ? squareColor : '#eee'}}>&nbsp;</span>\n                    })}\n                </span>\n            })}\n        </div>\n    );\n}","import { useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { addFriend, db, deleteFriend } from \"../../../../firebase\";\nimport { RootState } from \"../../../../reducers/root\";\nimport { UserModel } from \"../../../models/User\";\nimport { Avatar } from \"./Avatar/Avatar\";\n\ninterface Props {\n    user: UserModel;\n    isFriend: boolean;\n    setFriends: React.Dispatch<React.SetStateAction<UserModel[]>>;\n    friends: UserModel[];\n}\n\nexport const FriendCard = ({user, isFriend, setFriends, friends}: Props) => {\n\n    const mainUserId = useSelector((state: RootState) => state.user._id);\n    const mainUserEmail = useSelector((state: RootState) => state.user.email);\n\n    const history = useHistory();\n\n    async function handleAddFriend() {\n        const newFriend = {\n            _id: user._id,\n            email: user.email,\n            username: user.username,\n            age: user.age\n        };\n        setFriends([...friends, newFriend]);\n        await addFriend(db, mainUserId, user.email);\n    }\n\n    function handleViewGallery() {\n        history.push(`/library/${user._id}`);\n    }\n\n    async function handleDeleteFriend() {\n        if (window.confirm(\"Are you sure you want to delete this friend?\")) {\n            const deletedFriendIndex = friends.findIndex(friend => friend._id === user._id);\n            setFriends(\n                [\n                    ...friends.slice(0, deletedFriendIndex),\n                    ...friends.slice(deletedFriendIndex + 1, friends.length)\n                ]\n            );\n            await deleteFriend(db, mainUserId, mainUserEmail, user.email);\n        }\n    }\n\n    return (\n        <div className='friends__friend u-margin-bottom'>\n            <div className='friends__friend-group'>\n                <Avatar/>\n                <div className='friends__friend-info'>\n                    <p className='subheading'>{user.username || user.email}</p>\n                    {user.username ? <p className='friends__par'>{user.email}</p> : ''}\n                    {user.age ? <p className='friends__par'>Age: {user.age}</p> : ''}\n                </div>\n            </div>\n            {\n                isFriend\n                ?\n                <span className=\"btn-sliding-cont\">\n                    <span className='btn btn-sliding btn--purple' onClick={() => handleViewGallery()}>View gallery</span>\n                    <span className='btn btn-sliding btn--red' onClick={() => handleDeleteFriend()}>Remove</span>\n                </span>\n                :\n                <span className='btn btn-sliding btn--green' onClick={() => handleAddFriend()}>Add</span>\n            }\n        </div>\n    );\n};","import { UserModel } from \"../../models/User\";\nimport { FriendCard } from \"./FriendCard/FriendCard\";\n\ninterface Props {\n    users: UserModel[];\n    friends: UserModel[];\n    isFriendsList: boolean;\n    setFriends: React.Dispatch<React.SetStateAction<UserModel[]>>;\n}\n\nexport const FriendsList = ({users, isFriendsList, setFriends, friends}: Props) => {\n\n    return (\n        <section className='friends__list'>\n            {users.length > 0\n            ?\n            users.map((user: UserModel) => <FriendCard key={user.email} user={user} isFriend={isFriendsList} setFriends={setFriends} friends={friends}/>)\n            :\n            'You have no friends yet. Add them, so you can see them here'}\n        </section>\n    );\n};","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FriendsList } from './FriendsList/FriendsList';\nimport { RootState } from '../../reducers/root';\nimport { UserModel } from '../models/User';\nimport './Friends.scss';\nimport { db, getPotentialFriends, getUsersFriends } from '../../firebase';\n\nexport const Friends = () => {\n    const [users, setUsers] = useState([] as UserModel[]);\n    const [friends, setFriends] = useState([] as UserModel[]);\n    const [usernameOrEmail, setUsernameOrEmail] = useState('');\n    const [isInSearch, setIsInSearch] = useState(false);\n\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n    const userId = useSelector((state: RootState) => state.user._id);\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            (async () => {\n                const userFriends = await getUsersFriends(db, userId) as UserModel[];\n                setFriends(userFriends);\n            })();\n        }\n    }, []);\n\n    async function findPotentialFriends() {\n        const potentialFriends = await getPotentialFriends(db, usernameOrEmail);\n        setUsers(potentialFriends as UserModel[]);\n    }\n\n    function handleSubmit(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        e.preventDefault();\n        setIsInSearch(true);\n        findPotentialFriends();\n    }\n\n    return (\n        <main className='friends'>\n            {\n                isLoggedIn\n                ?\n                <article className='friends__section'>\n                    <h2 className='heading-secondary'>Search for new friends</h2>\n                    <form className='friends__search-group'>\n                        <input className='friends__input' placeholder='Email Address or User Name' type='text' onChange={(e) => {\n                            setUsernameOrEmail(e.target.value);\n                            if (e.target.value === '') {\n                                setIsInSearch(false);\n                            }\n                        }}/>\n                        <button onClick = {(e) => handleSubmit(e)} className='btn btn--form'>Search</button>\n                    </form>\n                    <h2 className='heading-secondary'>{isInSearch ? 'Search results' : 'My friends'}</h2>\n                    {\n                        isInSearch\n                        ?\n                        <FriendsList users={users} friends={friends} isFriendsList={false} setFriends={setFriends}/>\n                        :\n                        <FriendsList users={friends} friends={friends} isFriendsList={true} setFriends={setFriends}/>\n                    }\n                </article>\n                :\n                <h2 className='heading-secondary'>Sign In to view your friends list</h2>\n            }\n            <img className='friends__img' src='./assets/addFriends.svg' alt='Social media friends'/>\n        </main>\n    );\n};","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { RootState } from \"../../reducers/root\";\nimport { ShowCollection } from \"../shows/ShowCollection/ShowCollection\";\n\nimport '../shows/Shows.scss';\nimport { ShowModel } from \"../models/Show\";\nimport { db, getUserShows } from \"../../firebase\";\n\nexport const Library = () => {\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n    const favoriteShowIds = useSelector((state: RootState) => state.user.favorites);\n    const mainUserId = useSelector((state: RootState) => state.user._id);\n    const { id } = useParams<{ id: string }>();\n\n    const [favoriteShows, setFavoriteShows] = useState([] as ShowModel[])\n\n    useEffect(() => {\n        if (mainUserId === id) {\n            (async function () {\n                const results = await Promise.all(\n                    favoriteShowIds.map(id => {\n                        const url = `https://api.tvmaze.com/shows/${id}`;\n                        return fetch(url).then(response => response.json());\n                    })\n                );\n                const userShows = results as ShowModel[];\n                setFavoriteShows([...userShows]);\n            })();\n        } else {\n            (async function () {\n                const results = await getUserShows(db, id);\n                const shows = await Promise.all(\n                    results.map(id => {\n                        const url = `https://api.tvmaze.com/shows/${id}`;\n                        return fetch(url).then(response => response.json());\n                    })\n                );\n                const userShows = shows as ShowModel[];\n                setFavoriteShows([...userShows]);\n            })();\n        }\n    }, [id]);\n\n    return (\n        <main className='shows'>\n            {\n                isLoggedIn\n                ?\n                <article className='shows__collections'>\n                    {\n                    favoriteShows.length > 0\n                    ?    \n                    <ShowCollection title=\"Your favorites\" showCollection={favoriteShows}/>\n                    :\n                    <h2 className='heading-secondary'>There are no shows in this library</h2>\n                    }\n                </article>\n                :\n                <h2 className='heading-secondary'>Sign In to view your library</h2>\n            }\n        </main>\n    );\n};","import {setUserInfo, db} from '../../firebase';\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { RootState } from '../../reducers/root';\nimport './Profile.scss';\nimport { set_new_user_data } from '../../actions';\nimport { UserModel } from '../models/User';\n\nexport const Profile = () => {\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n\n    const userId = useSelector((state: RootState) => state.user._id);\n    const initialEmail = useSelector((state: RootState) => state.user.email);\n    const initialPassword = useSelector((state: RootState) => state.user.password);\n    const initialUsername = useSelector((state: RootState) => state.user.username);\n    const initialAge = useSelector((state: RootState) => state.user.age);\n\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [age, setAge] = useState('');\n\n    useEffect(() => {\n        setEmail(initialEmail);\n        setPassword(initialPassword);\n        setAge(initialAge);\n        setUsername(initialUsername);\n    }, [])\n\n    function handleNewUserData(e) {\n        e.preventDefault();\n        const user: UserModel = {\n            _id: userId,\n            email,\n            password,\n            username,\n            age: +age\n        };\n        (async function () {\n            await setUserInfo(db, user);\n        })();\n        dispatch(set_new_user_data(user));\n    }\n\n    return (\n        <main className='profile' style={{backgroundImage: \"url('./assets/bg.jpeg')\"}}>\n            <div className='profile__bg-corrector'>\n                {\n                    isLoggedIn\n                    ?\n                    <form className='profile__form'>\n                        <h2 className='profile__heading'>Edit Profile Info</h2>\n                        <input className='profile__input' placeholder='Email Address' type='email' defaultValue={email} onChange={(e) => setEmail(e.target.value)}/>\n                        <input className='profile__input' placeholder='Password' type='password' defaultValue={password} onChange={(e) => setPassword(e.target.value)}/>\n                        <input className='profile__input' placeholder='User Name' type='text' defaultValue={username} onChange={(e) => setUsername(e.target.value)}/>\n                        <input className='profile__input' placeholder='Age' type='number' defaultValue={age} onChange={(e) => setAge(e.target.value)}/>\n                        <button className='profile__button' onClick={(e) => handleNewUserData(e)}>Submit</button>\n                    </form>\n                    :\n                    <form className='profile__form'>\n                        <h2 className='profile__heading'>Sign in to view your profile</h2>\n                        <Link to='/signin'>\n                            <button className='profile__button'>Sign In</button>\n                        </Link>\n                    </form>\n                }\n            </div>\n        </main>\n    );\n};","// Hooks\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Redux\nimport { signin, signout, save_user_data, clear_user_data } from '../../actions';\nimport '../profile/Profile.scss';\n// Firestore\nimport {db, signUserIn} from '../../firebase';\nimport { useHistory } from 'react-router-dom';\nimport { RootState } from '../../reducers/root';\nimport { UserModel } from '../models/User';\n\nexport const SignIn = ({match}) => {\n    const [email , setEmail] = useState('');\n    const [password , setPassword] = useState('');\n    const isLoggedIn = useSelector((state: RootState) => state.isLoggedIn);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setEmail(match.params.email || '');\n    }, []);\n\n    async function handleSignIn(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        e.preventDefault();\n        const user: UserModel = await signUserIn(db, email, password) as UserModel;\n        dispatch(signin());\n        dispatch(save_user_data(user));\n        history.push('/shows');\n    }\n\n    function handleSignOut(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        e.preventDefault();\n        dispatch(clear_user_data());\n        dispatch(signout());\n        history.push('/');\n    }\n\n    return (\n        <main className='profile' style={{backgroundImage: email === '' ? \"url('./assets/bg.jpeg')\" : \"url('../assets/bg.jpeg')\"}}>\n            <div className='profile__bg-corrector'>\n                {\n                    isLoggedIn\n                    ?\n                    <form className=\"profile__form\">\n                        <h2 className='profile__heading'>You are signed in</h2>\n                        <button className='profile__button' onClick={(e) => handleSignOut(e)}>Sign Out</button>\n                    </form>\n                    :\n                    <form className='profile__form'>\n                        <h2 className='profile__heading'>Sign In</h2>\n                        <input className='profile__input' placeholder='Email Address' type='text' defaultValue={email || ''} onChange={(e) => setEmail(e.target.value)}/>\n                        <input className='profile__input' placeholder='Password' type='password' onChange={(e) => setPassword(e.target.value)}/>\n                        <button className='profile__button' onClick={(e) => handleSignIn(e)}>Sign In</button>\n                    </form>\n                }\n            </div>\n    </main>\n    );\n};","import { useState } from 'react';\nimport { ShowModel } from '../models/Show';\nimport { ShowCollection } from '../shows/ShowCollection/ShowCollection';\nimport './Search.scss'\n\ninterface ExtendedShowModel {\n    score: number;\n    show: ShowModel;\n}\n\nexport const Search = () => {\n    const [shows, setShows] = useState([] as ExtendedShowModel[]);\n    const [searchedShowName, setSearchedShowName] = useState('');\n\n    async function handleShowSearch(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        e.preventDefault();\n        const response = await fetch(`https://api.tvmaze.com/search/shows?q=${searchedShowName}`);\n        const results = await response.json();\n        setShows(results);\n    }\n\n    return (\n        <main className='search'>\n            <h2 className='heading-secondary u-margin-bottom-small'>Search for shows</h2>\n            <form className='search__search-group u-margin-bottom'>\n                <input className='search__input' placeholder='Show name' type='text' onChange={(e) => setSearchedShowName(e.target.value)}/>\n                <button className='btn btn--form' onClick={(e) => handleShowSearch(e)}>Search</button>\n            </form>\n            {\n            shows.length > 0\n            ?\n            <ShowCollection title=\"Search results\" showCollection={shows.map(showInfo => showInfo.show)}/>\n            :\n            ''\n            }\n        </main>\n    );\n};","import { BrowserRouter, Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Header } from './header/Header';\nimport { Home } from './home/Home';\nimport { Shows } from './shows/Shows'\nimport { Friends } from './friends/Friends';\nimport { Library } from './library/Library';\nimport { Profile } from './profile/Profile';\nimport { SignIn } from './signin/SignIn';\nimport { Search } from './search/Search';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header/>\n      <Route path='/library/:id' component={Library} exact></Route>\n      <Route path='/signin/:email' component={SignIn} exact></Route>\n      <Route path='/search' component={Search} exact></Route>\n      <Route path='/signin' component={SignIn} exact></Route>\n      <Route path='/profile' component={Profile} exact></Route>\n      <Route path='/friends' component={Friends} exact></Route>\n      <Route path=\"/shows\" component={Shows} exact></Route>\n      <Route path=\"/\" component={Home} exact></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const loginReducer = (state: boolean = false, action) => {\n    switch (action.type) {\n        case 'SING_IN':\n            return !state;\n        case 'SIGN_OUT':\n            return !state;\n        default:\n            return state;\n    }\n};\n\nexport default loginReducer;","import {UserModel} from '../app/models/User';\n\nconst initialState: UserModel = {\n    _id: '',\n    email: '',\n    password: '',\n    username: '',\n    age: 0\n};\n\nconst userReducer = (state: UserModel = initialState, action) => {\n    switch (action.type) {\n        case 'SAVE_USER_DATA':\n            return {\n                ...state,\n                ...action.payload\n            };\n        case 'CLEAR_USER_DATA':\n            return {};\n        case 'ADD_SHOW_TO_FAVORITES':\n            const newState = {...state};\n            if (!newState.favorites) {\n                newState.favorites = [];\n            }\n            newState.favorites.push(action.payload.showId);\n            return newState;\n        case 'SET_NEW_USER_DATA':\n            return {\n                ...state,\n                ...action.payload\n            };\n        case 'SET_FRIENDS':\n            return {\n                ...state,\n                friends: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;","import {combineReducers} from 'redux';\n\nimport loginReducer from \"./login\";\nimport userReducer from './user';\n\nconst rootReducer = combineReducers({\n    isLoggedIn: loginReducer,\n    user: userReducer,\n});\n  \nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, compose } from 'redux';\n\nimport {Provider} from 'react-redux';\n\nimport rootReducer from './reducers/root';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}